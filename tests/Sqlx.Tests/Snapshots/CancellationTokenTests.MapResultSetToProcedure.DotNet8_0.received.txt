// <auto-generated>
// Code generated by Stored Procedures Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591

namespace Foo
{

    using System;
    using System.Collections.Generic;
    using System.Data.Common;
    using System.Linq;

    partial class C
    {
        public partial async Task<IList<Foo.Item>> M(CancellationToken cancellationToken)
        {
            var connection = this.connection;
            if(connection.State != global::System.Data.ConnectionState.Open)
            {
                await connection.OpenAsync(cancellationToken).ConfigureAwait(false);
            }
            using var command = connection.CreateCommand();
            var sqlQuery = @"sp_TestSP";
            command.CommandText = sqlQuery;
            using global::System.Data.Common.DbDataReader reader = await command.ExecuteReaderAsync(cancellationToken).ConfigureAwait(false);
            var __result = new List<Item>();
            while (await reader.ReadAsync(cancellationToken).ConfigureAwait(false))
            {
                var item = new Item();
                item.StringValue = reader.GetString(0);
                item.Int32Value = reader.GetInt32(1);
                item.NullableInt32Value = reader.GetInt32(2);
                __result.Add(item);
            }

            await reader.CloseAsync().ConfigureAwait(false);
            return __result;
        }

    }
}