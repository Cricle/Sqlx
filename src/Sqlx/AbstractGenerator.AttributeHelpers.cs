// -----------------------------------------------------------------------
// <auto-generated>
#nullable enable
// -----------------------------------------------------------------------

namespace Sqlx;

using Microsoft.CodeAnalysis;
using System.Linq;

public abstract partial class AbstractGenerator
{
    private void GenerateOrCopyAttributes(IndentedStringBuilder sb, IMethodSymbol method, INamedTypeSymbol? entityType, string tableName)
    {
        // Check if method already has SQL attributes
        var existingSqlAttributes = method.GetAttributes()
            .Where(attr => attr.AttributeClass?.Name == "SqlxAttribute" ||
                          attr.AttributeClass?.Name == "RawSqlAttribute" ||
                          attr.AttributeClass?.Name == "SqlExecuteTypeAttribute")
            .ToArray();

        if (existingSqlAttributes.Any())
        {
            // Copy existing attributes as-is - let the old generator handle them
            foreach (var attr in existingSqlAttributes)
            {
                sb.AppendLine(GenerateSqlxAttribute(attr));
            }
        }
        else
        {
            sb.AppendLine(GenerateSqlxAttribute(method, entityType, tableName));
        }
    }
}


