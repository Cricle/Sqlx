// -----------------------------------------------------------------------
// <copyright file="DbDataReaderTests.cs" company="Cricle">
// Copyright (c) Cricle. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------

namespace Sqlx.Tests;

using Microsoft.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;

[TestClass]
public class DbDataReaderTests : CodeGenerationTestBase
{
    [TestMethod]
    public void DbDataReaderResult()
    {
        string source = @"
using System.Data.Common;
using Sqlx.Annotations;

namespace Foo
{
    partial class C
    {
        private DbConnection connection;

        [Sqlx(""sp_TestSP"")]
        public partial System.Data.Common.DbDataReader M(int clientId, string? personId);
    }
}";
        string output = GetCSharpGeneratedOutput(source, NullableContextOptions.Disable);

        Assert.IsNotNull(output);

        var expectedOutput = @"// <auto-generated>
// Code generated by Stored Procedures Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
#pragma warning disable 1591

namespace Foo
{

    using System;
    using System.Collections.Generic;
    using System.Data.Common;
    using System.Linq;

    partial class C
    {
        public partial System.Data.Common.DbDataReader M(int clientId, string? personId)
        {
            var connection = this.connection;
            if(connection.State != global::System.Data.ConnectionState.Open)
            {
                connection.Open();
            }
            using var command = connection.CreateCommand();
            var sqlQuery = @""sp_TestSP @client_id, @person_id"";
            command.CommandText = sqlQuery;
            var __result = command.ExecuteReader();
            return __result;
        }

    }
}";
        Assert.AreEqual(expectedOutput, output);
    }
}
