<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net8.0;net9.0</TargetFrameworks>
    <LangVersion>12.0</LangVersion>
	  <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Sqlx</PackageId>
    <Title>Sqlx - High-Performance Type-Safe .NET ORM</Title>
    <Description>
      Sqlx 0.4.0 - Production-ready ORM with Dapper-level performance and EF Core-level features.
      ✨ NEW: JOIN queries (INNER/LEFT), GROUP BY/HAVING, IN/LIKE/BETWEEN, CASE WHEN, Transaction support
      ⚡ Performance: Close to Dapper (1.08-1.27x), better memory efficiency
      🛡️ Type-safe: Compile-time validation, zero reflection, full nullable support
      🎯 Developer-friendly: Interface-driven, 963 tests (100% pass), AOT-ready
      🔗 Multi-database: SQL Server, MySQL, PostgreSQL, SQLite, Oracle
    </Description>
    <PackageTags>
      orm;sql;netstandard;net8;net9;source-generator;aot;performance;type-safe;
      join;transaction;group-by;having;case-when;linq;csharp;dotnet;
      dapper-alternative;ef-core-alternative;high-performance;low-gc;
      compile-time;zero-reflection;production-ready
    </PackageTags>
    <PackageReleaseNotes>
      v0.4.0 - Major Update
      ✅ 100% Test Coverage: 963/963 tests passing
      🔗 JOIN Queries: INNER JOIN, LEFT JOIN, multi-table joins
      🎯 Advanced SQL: GROUP BY/HAVING, IN/LIKE/BETWEEN, CASE WHEN, DISTINCT
      💼 Transaction Support: Simple Repository.Transaction property API
      ⚡ Performance: 1.08-1.27x vs Dapper, better memory (-8% to -50%)
      🛡️ Robust: Large result sets, NULL handling, Unicode, connection reuse
      📚 Full documentation and migration guide available
    </PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
	  <None Include="../Sqlx.Generator/bin/$(Configuration)/netstandard2.0/Sqlx.Generator.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	  <None Include="..\..\README.md" Pack="true" PackagePath="\" Visible="false" />
    <None Include="..\..\docs\**\*.md" Pack="true" PackagePath="docs\" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework)=='netstandard2.0'">
    <PackageReference Include="System.Diagnostics.DiagnosticSource" />
    <PackageReference Include="System.Memory" />
  </ItemGroup>

</Project>
